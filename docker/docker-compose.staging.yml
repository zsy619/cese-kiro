version: '3.8'

services:
  # MySQL 数据库 - 预发布环境
  mysql:
    image: mysql:8.0
    container_name: cese-mysql-staging
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-staging123456}
      MYSQL_DATABASE: cese_staging
      MYSQL_USER: cese_user
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-staging_password}
    ports:
      - "3308:3306"
    volumes:
      - mysql_staging_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - cese-network-staging
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis 缓存 - 预发布环境
  redis:
    image: redis:7-alpine
    container_name: cese-redis-staging
    restart: unless-stopped
    ports:
      - "6381:6379"
    volumes:
      - redis_staging_data:/data
    networks:
      - cese-network-staging
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 10s
      retries: 5

  # CESE 全栈应用 - 预发布环境
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        - NODE_ENV=production
    container_name: cese-app-staging
    restart: unless-stopped
    ports:
      - "3101:80"    # 前端端口
      - "8082:8080"  # 后端端口
    environment:
      - NODE_ENV=staging
      - REACT_APP_API_BASE_URL=/api
      - CESE_DATABASE_HOST=mysql
      - CESE_DATABASE_PORT=3306
      - CESE_DATABASE_USERNAME=root
      - CESE_DATABASE_PASSWORD=${MYSQL_ROOT_PASSWORD:-staging123456}
      - CESE_DATABASE_DATABASE=cese_staging
      - CESE_JWT_SECRET=${JWT_SECRET:-cese-jwt-secret-key-staging}
      - CESE_LOG_LEVEL=info
      - CESE_LOG_OUTPUT=file
    volumes:
      - ../backend/configs:/root/configs
      - app_staging_logs:/root/logs
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - cese-network-staging
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      timeout: 10s
      retries: 5
      start_period: 40s

  # Nginx 负载均衡器（可选）
  nginx:
    image: nginx:alpine
    container_name: cese-nginx-staging
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.staging.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - cese-network-staging

volumes:
  mysql_staging_data:
    driver: local
  redis_staging_data:
    driver: local
  app_staging_logs:
    driver: local

networks:
  cese-network-staging:
    driver: bridge
