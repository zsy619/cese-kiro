name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # 前端测试和构建
  frontend:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 设置 Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: 安装依赖
        working-directory: ./frontend
        run: npm ci

      - name: 代码检查
        working-directory: ./frontend
        run: npm run lint

      - name: 类型检查
        working-directory: ./frontend
        run: npm run type-check

      - name: 格式检查
        working-directory: ./frontend
        run: npm run format:check

      - name: 运行测试
        working-directory: ./frontend
        run: npm test -- --coverage --watchAll=false

      - name: 上传测试覆盖率
        uses: codecov/codecov-action@v3
        with:
          files: ./frontend/coverage/lcov.info
          flags: frontend

      - name: 构建项目
        working-directory: ./frontend
        run: npm run build

      - name: 上传构建产物
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: frontend/build

  # Docker 镜像构建
  docker:
    needs: frontend
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 设置 Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 登录 Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 构建并推送 Docker 镜像
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/cese-kiro:latest
            ${{ secrets.DOCKER_USERNAME }}/cese-kiro:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/cese-kiro:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/cese-kiro:buildcache,mode=max
